buildscript {
	ext {
		kotlinVersion = '1.2.41'
		springBootVersion = '2.0.4.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
		classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
	}
}

plugins {
	id 'nu.studer.jooq' version '3.0.1'
}

apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'org.webdevandsausages'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8
compileKotlin {
	kotlinOptions {
		freeCompilerArgs = ["-Xjsr305=strict"]
		jvmTarget = "1.8"
	}
}
compileTestKotlin {
	kotlinOptions {
		freeCompilerArgs = ["-Xjsr305=strict"]
		jvmTarget = "1.8"
	}
}

repositories {
	mavenCentral()
}


ext {
	springCloudVersion = 'Finchley.SR1'
	jooq.version = '3.11.4'
}

dependencies {
	compile 'org.jooq:jooq'
	compile('org.flywaydb:flyway-core')
	compile('org.springframework.boot:spring-boot-starter-jooq')
	compile("org.jetbrains.kotlin:kotlin-stdlib-jdk8")
	compile("org.jetbrains.kotlin:kotlin-reflect")
	compile group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: '2.0.4.RELEASE'
	jooqRuntime 'postgresql:postgresql:9.1-901.jdbc4'

	runtime('org.postgresql:postgresql')
	testCompile('org.springframework.boot:spring-boot-starter-test')
}

jooq {
	version = '3.11.4' // the default (can be omitted)
	edition = 'OSS'    // the default (can be omitted), other allowed values are PRO, PRO_JAVA_6, and TRIAL

	backend(sourceSets.main) {
		jdbc {
			driver = 'org.postgresql.Driver'
			url = 'jdbc:postgresql://localhost:5432/wds_db'
			user = 'leo'
			password = 'salasana'
		}
		generator {
			name = 'org.jooq.codegen.DefaultGenerator'
			strategy {
				name = 'org.jooq.codegen.DefaultGeneratorStrategy'
				// ...
			}
			database {
				name = 'org.jooq.meta.postgres.PostgresDatabase'
				inputSchema = 'public'
				forcedTypes {
					forcedType {
						name = 'varchar'
						expression = '.*'
						types = 'JSONB?'
					}
					forcedType {
						name = 'varchar'
						expression = '.*'
						types = 'INET'
					}
				}
				// ...
			}
			generate {
				relations = true
				deprecated = false
				records = true
				daos = true
				interfaces = true
				immutablePojos = false
				fluentSetters = true
				// ...
			}
			target {
				packageName = 'meta'
				directory = 'src/main/kotlin/org/webdevandsausages/backend/persistence'
				// directory = ...
			}
		}
	}
}

ext['jooq.version'] = '3.11.4'

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}


