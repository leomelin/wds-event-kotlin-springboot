/*
 * This file is generated by jOOQ.
 */
package meta.tables.daos;


import java.sql.Timestamp;
import java.util.List;

import javax.annotation.Generated;

import meta.tables.MailingList;
import meta.tables.records.MailingListRecord;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MailingListDao extends DAOImpl<MailingListRecord, meta.tables.pojos.MailingList, Long> {

    /**
     * Create a new MailingListDao without any configuration
     */
    public MailingListDao() {
        super(MailingList.MAILING_LIST, meta.tables.pojos.MailingList.class);
    }

    /**
     * Create a new MailingListDao with an attached configuration
     */
    public MailingListDao(Configuration configuration) {
        super(MailingList.MAILING_LIST, meta.tables.pojos.MailingList.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Long getId(meta.tables.pojos.MailingList object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<meta.tables.pojos.MailingList> fetchById(Long... values) {
        return fetch(MailingList.MAILING_LIST.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public meta.tables.pojos.MailingList fetchOneById(Long value) {
        return fetchOne(MailingList.MAILING_LIST.ID, value);
    }

    /**
     * Fetch records that have <code>affiliation IN (values)</code>
     */
    public List<meta.tables.pojos.MailingList> fetchByAffiliation(String... values) {
        return fetch(MailingList.MAILING_LIST.AFFILIATION, values);
    }

    /**
     * Fetch records that have <code>email IN (values)</code>
     */
    public List<meta.tables.pojos.MailingList> fetchByEmail(String... values) {
        return fetch(MailingList.MAILING_LIST.EMAIL, values);
    }

    /**
     * Fetch records that have <code>first_name IN (values)</code>
     */
    public List<meta.tables.pojos.MailingList> fetchByFirstName(String... values) {
        return fetch(MailingList.MAILING_LIST.FIRST_NAME, values);
    }

    /**
     * Fetch records that have <code>last_name IN (values)</code>
     */
    public List<meta.tables.pojos.MailingList> fetchByLastName(String... values) {
        return fetch(MailingList.MAILING_LIST.LAST_NAME, values);
    }

    /**
     * Fetch records that have <code>created IN (values)</code>
     */
    public List<meta.tables.pojos.MailingList> fetchByCreated(Timestamp... values) {
        return fetch(MailingList.MAILING_LIST.CREATED, values);
    }

    /**
     * Fetch records that have <code>receives_mail IN (values)</code>
     */
    public List<meta.tables.pojos.MailingList> fetchByReceivesMail(Boolean... values) {
        return fetch(MailingList.MAILING_LIST.RECEIVES_MAIL, values);
    }
}
