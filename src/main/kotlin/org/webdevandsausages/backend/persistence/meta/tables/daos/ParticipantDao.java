/*
 * This file is generated by jOOQ.
 */
package meta.tables.daos;


import java.util.List;

import javax.annotation.Generated;

import meta.tables.Participant;
import meta.tables.records.ParticipantRecord;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ParticipantDao extends DAOImpl<ParticipantRecord, meta.tables.pojos.Participant, Long> {

    /**
     * Create a new ParticipantDao without any configuration
     */
    public ParticipantDao() {
        super(Participant.PARTICIPANT, meta.tables.pojos.Participant.class);
    }

    /**
     * Create a new ParticipantDao with an attached configuration
     */
    public ParticipantDao(Configuration configuration) {
        super(Participant.PARTICIPANT, meta.tables.pojos.Participant.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Long getId(meta.tables.pojos.Participant object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<meta.tables.pojos.Participant> fetchById(Long... values) {
        return fetch(Participant.PARTICIPANT.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public meta.tables.pojos.Participant fetchOneById(Long value) {
        return fetchOne(Participant.PARTICIPANT.ID, value);
    }

    /**
     * Fetch records that have <code>name IN (values)</code>
     */
    public List<meta.tables.pojos.Participant> fetchByName(String... values) {
        return fetch(Participant.PARTICIPANT.NAME, values);
    }

    /**
     * Fetch records that have <code>email IN (values)</code>
     */
    public List<meta.tables.pojos.Participant> fetchByEmail(String... values) {
        return fetch(Participant.PARTICIPANT.EMAIL, values);
    }

    /**
     * Fetch records that have <code>verification_token IN (values)</code>
     */
    public List<meta.tables.pojos.Participant> fetchByVerificationToken(String... values) {
        return fetch(Participant.PARTICIPANT.VERIFICATION_TOKEN, values);
    }

    /**
     * Fetch records that have <code>event_id IN (values)</code>
     */
    public List<meta.tables.pojos.Participant> fetchByEventId(Long... values) {
        return fetch(Participant.PARTICIPANT.EVENT_ID, values);
    }
}
